from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from bot.keyboards.main_keyboard import main_menu
from bot.services.openai_assistant import ask_mia

router = Router()

class PHQ9(StatesGroup):
    q0 = State()
    q1 = State()
    q2 = State()
    q3 = State()
    q4 = State()
    q5 = State()
    q6 = State()
    q7 = State()
    q8 = State()

questions = [
    "–í–æ–ø—Ä–æ—Å 1 PHQ-9: –ú–∞–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∏–ª–∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏?",
    "–í–æ–ø—Ä–æ—Å 2: –ß—É–≤—Å—Ç–≤–æ –ø–æ–¥–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç–∏, –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –∏–ª–∏ –±–µ–∑–Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏?",
    "–í–æ–ø—Ä–æ—Å 3: –ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º (—Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∑–∞—Å—ã–ø–∞–Ω–∏—è, —á–∞—Å—Ç—ã–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è, —á—Ä–µ–∑–º–µ—Ä–Ω—ã–π —Å–æ–Ω)?",
    "–í–æ–ø—Ä–æ—Å 4: –£—Å—Ç–∞–ª–æ—Å—Ç—å –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏?",
    "–í–æ–ø—Ä–æ—Å 5: –ü–æ—Ç–µ—Ä—è –∞–ø–ø–µ—Ç–∏—Ç–∞ –∏–ª–∏ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏–µ?",
    "–í–æ–ø—Ä–æ—Å 6: –ù–∏–∑–∫–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞, –æ—â—É—â–µ–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –Ω–∏–∫—á–µ–º–Ω–æ—Å—Ç–∏ –∏–ª–∏ –≤–∏–Ω—ã?",
    "–í–æ–ø—Ä–æ—Å 7: –¢—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–µ–π –≤–Ω–∏–º–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –≥–∞–∑–µ—Ç—ã –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¢–í)?",
    "–í–æ–ø—Ä–æ—Å 8: –ú–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏, –Ω–∞–æ–±–æ—Ä–æ—Ç, –∏–∑–ª–∏—à–Ω—è—è —Å—É–µ—Ç–ª–∏–≤–æ—Å—Ç—å, –∑–∞–º–µ—á–µ–Ω–Ω–∞—è –¥—Ä—É–≥–∏–º–∏?",
    "–í–æ–ø—Ä–æ—Å 9: –ú—ã—Å–ª–∏ –æ —Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–∏ –∏–ª–∏ —á—Ç–æ –≤—ã –ª—É—á—à–µ –±—ã —É–º–µ—Ä–ª–∏?"
]

options = ["0 ‚Äî —Å–æ–≤—Å–µ–º –Ω–µ—Ç", "1 ‚Äî –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π", "2 ‚Äî –±–æ–ª–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –¥–Ω–µ–π", "3 ‚Äî –ø–æ—á—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"]

states = [
    PHQ9.q0, PHQ9.q1, PHQ9.q2, PHQ9.q3,
    PHQ9.q4, PHQ9.q5, PHQ9.q6, PHQ9.q7, PHQ9.q8
]

@router.message(F.text == "üßæ PHQ-9")
async def start_phq9(message: Message, state: FSMContext):
    await state.set_state(PHQ9.q0)
    await state.set_data({"answers": []})
    await message.answer("üìã –°–µ–π—á–∞—Å —Ç—ã –ø—Ä–æ–π–¥—ë—à—å —Ç–µ—Å—Ç PHQ-9. –û—Ç–≤–µ—á–∞–π –ø–æ —à–∫–∞–ª–µ –æ—Ç 0 –¥–æ 3.")
    await message.answer(questions[0], reply_markup=ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=opt)] for opt in options],
        resize_keyboard=True,
        one_time_keyboard=True
    ))

@router.message(PHQ9.q0)
@router.message(PHQ9.q1)
@router.message(PHQ9.q2)
@router.message(PHQ9.q3)
@router.message(PHQ9.q4)
@router.message(PHQ9.q5)
@router.message(PHQ9.q6)
@router.message(PHQ9.q7)
@router.message(PHQ9.q8)
async def handle_answer(message: Message, state: FSMContext):
    data = await state.get_data()
    answers = data.get("answers", [])

    try:
        score = int(message.text.split("‚Äî")[0].strip())
        answers.append(score)
    except:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.")
        return

    if len(answers) < len(questions):
        await state.set_data({"answers": answers})
        await state.set_state(states[len(answers)])
        await message.answer(questions[len(answers)], reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text=opt)] for opt in options],
            resize_keyboard=True,
            one_time_keyboard=True
        ))
    else:
        total = sum(answers)
        await state.clear()
        await message.answer("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...", reply_markup=main_menu())

        prompt = f"""–Ø —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–æ—à—ë–ª —Ç–µ—Å—Ç PHQ-9, —à–∫–∞–ª–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏. –ú–æ–π –∏—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª: {total} –∏–∑ 27.
–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ —ç—Ç–æ –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç—å, –∫–∞–∫ —ç—Ç–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç—Å—è —Å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è, –∏ —á—Ç–æ –±—ã —Ç—ã –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞? –û–±—ä—è—Å–Ω–∏ –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏."""

        response = await ask_mia(prompt)
        await message.answer(response)
