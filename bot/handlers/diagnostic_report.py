from aiogram import Router, F
from aiogram.types import Message
from bot.services.diagnostic_summary import generate_diagnostic_summary
from bot.keyboards.main_keyboard import main_menu

router = Router()

# üîß –í—Ä–µ–º–µ–Ω–Ω–æ: –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
mock_results = {
    "phq9": 14,
    "beck": 23,
    "spilberger_state": 41,
    "spilberger_trait": 48,
    "mfi20": 57,
    "burnout_ee": 28,
    "burnout_dp": 16,
    "burnout_pa": 29
}

@router.message(F.text.lower() == "–º–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑")
async def send_summary(message: Message):
    await message.answer("üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–≤–æ—ë –ø—Å–∏—Ö–æ—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
    try:
        summary = await generate_diagnostic_summary(mock_results)
        await message.answer(summary, reply_markup=main_menu())
    except Exception as e:
        print("OpenAI error:", e)
        await message.answer(
            "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.",
            reply_markup=main_menu()
        )
